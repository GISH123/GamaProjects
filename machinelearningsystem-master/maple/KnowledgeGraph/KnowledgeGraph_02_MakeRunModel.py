import os ,sys ; os.chdir(os.path.dirname(__file__)) if os.name == "posix" else None
import common.P43_01_MakeModelingCommon as makeModeling
import datetime
# 該程式主要為基本執行模型的檔案
if __name__ == "__main__":
    # 建檔期Tag資料
    print('只做v012')
    if False:
        makeModeling.main({
            "runtype": ["runmodel"]  # 只能輸入 buildmodel 或 runmodel , 只會取第一個值
            , "builduser": ["peiyuwu"]  # 只能輸入作者名 , 只會取第一個值
            , "makedate": ['2022-06-29']  # 只能輸入日期格式為YYYY-MM-DD , 取多個值
            , "productname": ["maple"]  # 只能輸入產品名 , 只會取第一個值
            , "project": ["KnowledgeGraph"]  # 只能輸入計畫名 , 只會取第一個值
            , "modelversion": ["V0_1_2"]
            , "parameter" : {
                'rawdata': {
                    'version' : '20220726'
                }
            }
            # 只能輸入格式為V0_0_1 , 在 runtype 為 buildmodel 取單一值 , 在 runtype 為 runmodel 取多個值
        })

    # 建所有圖譜資料
    print('只做v111')
    if False:
        makedate = [
            # ('2020-12-30', '2021-01-13'), ('2021-01-13', '2021-01-27'), ('2021-01-27', '2021-02-10'),
            # ('2021-02-10', '2021-02-24'), ('2021-02-24', '2021-03-10'), ('2021-03-10', '2021-03-31'),
            # ('2021-03-31', '2021-04-14'), ('2021-04-14', '2021-04-28'), ('2021-04-28', '2021-05-12'),
            # ('2021-05-12', '2021-05-26'), ('2021-05-26', '2021-06-09'), ('2021-06-09', '2021-06-23'),
            # ('2021-06-23', '2021-07-07'), ('2021-07-07', '2021-07-21'), ('2021-07-21', '2021-08-04'),
            # ('2021-08-04', '2021-08-18'), ('2021-08-18', '2021-09-08'), ('2021-09-08', '2021-09-29'),
            # ('2021-09-29', '2021-10-20'), ('2021-10-20', '2021-11-03'), ('2021-11-03', '2021-11-17'),
            # ('2021-11-17', '2021-12-01'), ('2021-12-01', '2021-12-15'), ('2021-12-15', '2021-12-29'),
            # ('2021-12-29', '2022-01-12'), ('2022-01-12', '2022-01-26'), ('2022-01-26', '2022-02-09'),
            # ('2022-02-09', '2022-02-23'), ('2022-02-23', '2022-03-16'), ('2022-03-16', '2022-04-06'),
            # ('2022-04-06', '2022-04-27'), ('2022-04-27', '2022-05-11'),
            # ('2022-05-11', '2022-06-01'), ('2022-06-01', '2022-06-22'), ('2022-06-22', '2022-07-06'),
            # ('2022-07-06', '2022-07-27'), ('2022-07-27', '2022-08-10'),
            ('2022-08-10', '2022-08-24'),
            # ('2022-08-24', '2022-09-06'),
        ]
        for dt1, dt2 in makedate:
            makeModeling.main({
                "runtype": ["runmodel"]  # 只能輸入 buildmodel 或 runmodel , 只會取第一個值
                , "builduser": ["peiyuwu"]  # 只能輸入作者名 , 只會取第一個值
                , "makedate": ['2022-06-29']  # 只能輸入日期格式為YYYY-MM-DD , 取多個值
                , "productname": ["maple"]  # 只能輸入產品名 , 只會取第一個值
                , "project": ["KnowledgeGraph"]  # 只能輸入計畫名 , 只會取第一個值
                , "modelversion": ["V1_1_1"]
                , "parameter": {
                    'makedate' : [dt1, dt2]
                }
                # 只能輸入格式為V0_0_1 , 在 runtype 為 buildmodel 取單一值 , 在 runtype 為 runmodel 取多個值
            })

    # 建訓練資料
    print('只做v212')
    if False:
        makedate = [
            # ('2020-12-30', '2021-01-13'), ('2021-01-13', '2021-01-27'), ('2021-01-27', '2021-02-10'),
            # ('2021-02-10', '2021-02-24'), ('2021-02-24', '2021-03-10'), ('2021-03-10', '2021-03-31'),
            # ('2021-03-31', '2021-04-14'), ('2021-04-14', '2021-04-28'), ('2021-04-28', '2021-05-12'),
            # ('2021-05-12', '2021-05-26'), ('2021-05-26', '2021-06-09'), ('2021-06-09', '2021-06-23'),
            # ('2021-06-23', '2021-07-07'), ('2021-07-07', '2021-07-21'), ('2021-07-21', '2021-08-04'),
            # ('2021-08-04', '2021-08-18'), ('2021-08-18', '2021-09-08'), ('2021-09-08', '2021-09-29'),
            # ('2021-09-29', '2021-10-20'), ('2021-10-20', '2021-11-03'), ('2021-11-03', '2021-11-17'),
            # ('2021-11-17', '2021-12-01'), ('2021-12-01', '2021-12-15'), ('2021-12-15', '2021-12-29'),
            # ('2021-12-29', '2022-01-12'), ('2022-01-12', '2022-01-26'), ('2022-01-26', '2022-02-09'),
            # ('2022-02-09', '2022-02-23'), ('2022-02-23', '2022-03-16'), ('2022-03-16', '2022-04-06'),
            # ('2022-04-06', '2022-04-27'), ('2022-04-27', '2022-05-11'),
            # ('2022-05-11', '2022-06-01'), ('2022-06-01', '2022-06-22'), ('2022-06-22', '2022-07-06'),
            # ('2022-07-06', '2022-07-27'), ('2022-07-27', '2022-08-10'), ('2022-08-10', '2022-08-24'),
            ('2022-08-10', '2022-08-24'),
            # ('2022-08-24', '2022-09-06')
        ]
        for dt1, dt2 in makedate:
            makeModeling.main({
                "runtype": ["runmodel"]  # 只能輸入 buildmodel 或 runmodel , 只會取第一個值
                , "builduser": ["peiyuwu"]  # 只能輸入作者名 , 只會取第一個值
                , "makedate": ['2022-06-09']  # 只能輸入日期格式為YYYY-MM-DD , 取多個值
                , "productname": ["maple"]  # 只能輸入產品名 , 只會取第一個值
                , "project": ["KnowledgeGraph"]  # 只能輸入計畫名 , 只會取第一個值
                , "modelversion": ["V2_1_2"]
                , "parameter": {
                    'makedate': [dt1, dt2]
                }
            })

    # 建XGB資料
    print('''
        v316
        1. 資料源:過去有買過隨機箱，且上個月有登入的人。
        2. 建模:用最相似檔期代替新檔期(Graph搜尋)，計算平均購買分數
        3. 預測:XGB預測
    ''')
    if False:
        makedate = [
            # ('2020-12-30', '2021-01-13', '2021-01-27', '2021-02-10'), ('2021-01-13', '2021-01-27', '2021-02-10', '2021-02-24'),
            # ('2021-01-27', '2021-02-10', '2021-02-24', '2021-03-10'), ('2021-02-10', '2021-02-24', '2021-03-10', '2021-03-31'),
            # ('2021-02-24', '2021-03-10', '2021-03-31', '2021-04-14'), ('2021-03-10', '2021-03-31', '2021-04-14', '2021-04-28'),
            # ('2021-03-31', '2021-04-14', '2021-04-28', '2021-05-12'), ('2021-04-14', '2021-04-28', '2021-05-12', '2021-05-26'),
            # ('2021-04-28', '2021-05-12', '2021-05-26', '2021-06-09'), ('2021-05-12', '2021-05-26', '2021-06-09', '2021-06-23'),
            # ('2021-05-26', '2021-06-09', '2021-06-23', '2021-07-07'), ('2021-06-09', '2021-06-23', '2021-07-07', '2021-07-21'),
            # ('2021-06-23', '2021-07-07', '2021-07-21', '2021-08-04'), ('2021-07-07', '2021-07-21', '2021-08-04', '2021-08-18'),
            # ('2021-07-21', '2021-08-04', '2021-08-18', '2021-09-08'), ('2021-08-04', '2021-08-18', '2021-09-08', '2021-09-29'),
            # ('2021-08-18', '2021-09-08', '2021-09-29', '2021-10-20'), ('2021-09-08', '2021-09-29', '2021-10-20', '2021-11-03'),
            # ('2021-09-29', '2021-10-20', '2021-11-03', '2021-11-17'), ('2021-10-20', '2021-11-03', '2021-11-17', '2021-12-01'),
            # ('2021-11-03', '2021-11-17', '2021-12-01', '2021-12-15'), ('2021-11-17', '2021-12-01', '2021-12-15', '2021-12-29'),
            # ('2021-12-01', '2021-12-15', '2021-12-29', '2022-01-12'), ('2021-12-15', '2021-12-29', '2022-01-12', '2022-01-26'),
            # ('2021-12-29', '2022-01-12', '2022-01-26', '2022-02-09'), ('2022-01-12', '2022-01-26', '2022-02-09', '2022-02-23'),
            # ('2022-01-26', '2022-02-09', '2022-02-23', '2022-03-16'), ('2022-02-09', '2022-02-23', '2022-03-16', '2022-04-06'),
            # ('2022-02-23', '2022-03-16', '2022-04-06', '2022-04-27'), ('2022-03-16', '2022-04-06', '2022-04-27', '2022-05-11'),
            # ('2022-04-06', '2022-04-27', '2022-05-11', '2022-06-01'), ('2022-04-27', '2022-05-11', '2022-06-01', '2022-06-22'),
            # ('2022-05-11', '2022-06-01', '2022-06-22', '2022-07-06'), ('2022-06-01', '2022-06-22', '2022-07-06', '2022-07-27'),
            ('2022-06-22', '2022-07-06', '2022-07-27', '2022-08-10'),
        ]
        traindatelist = [
            '2021-01-27', '2021-02-10', '2021-02-24', '2021-03-10', '2021-03-31', '2021-04-14',
            '2021-04-28', '2021-05-12', '2021-05-26', '2021-06-09', '2021-06-23', '2021-07-07',
            '2021-07-21', '2021-08-04', '2021-08-18', '2021-09-08', '2021-09-29', '2021-10-20',
            '2021-11-03', '2021-11-17', '2021-12-01', '2021-12-15', '2021-12-29', '2022-01-12',
            '2022-01-26', '2022-02-09', '2022-02-23', '2022-03-16', '2022-04-06', '2022-04-27',
            '2022-05-11', '2022-06-01', '2022-06-22', '2022-07-06', '2022-07-27',
            #'2022-08-10',
        ]
        validDate = [
            # ('2022-06-01', '2022-06-22'), ('2022-06-22', '2022-07-06'),
            ('2022-07-06', '2022-07-27')
        ]
        makeModeling.main({
            "runtype": ["runmodel"]  # 只能輸入 buildmodel 或 runmodel , 只會取第一個值
            , "builduser": ["peiyuwu"]  # 只能輸入作者名 , 只會取第一個值
            , "makedate": ['2022-06-09']  # 只能輸入日期格式為YYYY-MM-DD , 取多個值
            , "productname": ["maple"]  # 只能輸入產品名 , 只會取第一個值
            , "project": ["KnowledgeGraph"]  # 只能輸入計畫名 , 只會取第一個值
            , "modelversion": ["V3_1_6"]
            , "parameter": {
                'makedate': makedate,
                'traindatelist': traindatelist,
                'validDate': validDate
            }
        })

    print('''
        v317
        1. 資料源:過去有買過隨機箱，且上個月有登入的人。
        2. 建模:用最相似檔期代替新檔期(Graph搜尋)，計算平均購買分數
        3. 預測:XGB預測機率
    ''')
    if False:
        makedate = [
            ('2020-12-30', '2021-01-13', '2021-01-27', '2021-02-10'), ('2021-01-13', '2021-01-27', '2021-02-10', '2021-02-24'),
            ('2021-01-27', '2021-02-10', '2021-02-24', '2021-03-10'), ('2021-02-10', '2021-02-24', '2021-03-10', '2021-03-31'),
            ('2021-02-24', '2021-03-10', '2021-03-31', '2021-04-14'), ('2021-03-10', '2021-03-31', '2021-04-14', '2021-04-28'),
            ('2021-03-31', '2021-04-14', '2021-04-28', '2021-05-12'), ('2021-04-14', '2021-04-28', '2021-05-12', '2021-05-26'),
            ('2021-04-28', '2021-05-12', '2021-05-26', '2021-06-09'), ('2021-05-12', '2021-05-26', '2021-06-09', '2021-06-23'),
            ('2021-05-26', '2021-06-09', '2021-06-23', '2021-07-07'), ('2021-06-09', '2021-06-23', '2021-07-07', '2021-07-21'),
            ('2021-06-23', '2021-07-07', '2021-07-21', '2021-08-04'), ('2021-07-07', '2021-07-21', '2021-08-04', '2021-08-18'),
            ('2021-07-21', '2021-08-04', '2021-08-18', '2021-09-08'), ('2021-08-04', '2021-08-18', '2021-09-08', '2021-09-29'),
            ('2021-08-18', '2021-09-08', '2021-09-29', '2021-10-20'), ('2021-09-08', '2021-09-29', '2021-10-20', '2021-11-03'),
            ('2021-09-29', '2021-10-20', '2021-11-03', '2021-11-17'), ('2021-10-20', '2021-11-03', '2021-11-17', '2021-12-01'),
            ('2021-11-03', '2021-11-17', '2021-12-01', '2021-12-15'), ('2021-11-17', '2021-12-01', '2021-12-15', '2021-12-29'),
            ('2021-12-01', '2021-12-15', '2021-12-29', '2022-01-12'), ('2021-12-15', '2021-12-29', '2022-01-12', '2022-01-26'),
            ('2021-12-29', '2022-01-12', '2022-01-26', '2022-02-09'), ('2022-01-12', '2022-01-26', '2022-02-09', '2022-02-23'),
            ('2022-01-26', '2022-02-09', '2022-02-23', '2022-03-16'), ('2022-02-09', '2022-02-23', '2022-03-16', '2022-04-06'),
            ('2022-02-23', '2022-03-16', '2022-04-06', '2022-04-27'), ('2022-03-16', '2022-04-06', '2022-04-27', '2022-05-11'),
            ('2022-04-06', '2022-04-27', '2022-05-11', '2022-06-01'), ('2022-04-27', '2022-05-11', '2022-06-01', '2022-06-22'),
            ('2022-05-11', '2022-06-01', '2022-06-22', '2022-07-06'),
            ('2022-06-01', '2022-06-22', '2022-07-06', '2022-07-27'),
            ('2022-06-22', '2022-07-06', '2022-07-27', '2022-08-10'),
        ]
        traindatelist = [
            '2021-01-27', '2021-02-10', '2021-02-24', '2021-03-10', '2021-03-31', '2021-04-14',
            '2021-04-28', '2021-05-12', '2021-05-26', '2021-06-09', '2021-06-23', '2021-07-07',
            '2021-07-21', '2021-08-04', '2021-08-18', '2021-09-08', '2021-09-29', '2021-10-20',
            '2021-11-03', '2021-11-17', '2021-12-01', '2021-12-15', '2021-12-29', '2022-01-12',
            '2022-01-26', '2022-02-09', '2022-02-23', '2022-03-16', '2022-04-06', '2022-04-27',
            '2022-05-11', '2022-06-01', '2022-06-22', '2022-07-06', '2022-07-27',
            # '2022-08-10'
        ]
        validDate = [
            ('2022-06-01', '2022-06-22'),
            ('2022-06-22', '2022-07-06'), ('2022-07-06', '2022-07-27')
        ]
        makeModeling.main({
            "runtype": ["runmodel"]  # 只能輸入 buildmodel 或 runmodel , 只會取第一個值
            , "builduser": ["peiyuwu"]  # 只能輸入作者名 , 只會取第一個值
            , "makedate": ['2022-06-09']  # 只能輸入日期格式為YYYY-MM-DD , 取多個值
            , "productname": ["maple"]  # 只能輸入產品名 , 只會取第一個值
            , "project": ["KnowledgeGraph"]  # 只能輸入計畫名 , 只會取第一個值
            , "modelversion": ["V3_1_7"]
            , "parameter": {
                'makedate': makedate,
                'traindatelist': traindatelist,
                'validDate': validDate
            }
        })

    # 建XGB資料
    print('''
        v318
        1. 資料源:
            a.30天內登入超過4小時
            b.IP<9
            c.買過隨機箱
            d.LV>220
        2. 建模:用最相似檔期代替新檔期(Graph搜尋)，計算平均購買分數
        3. 預測:XGB預測
    ''')
    if False:
        makedate = [ # valdt, enddt
            # ('2021-01-27', '2021-02-10'), ('2021-02-10', '2021-02-24'),
            # ('2021-02-24', '2021-03-10'), ('2021-03-10', '2021-03-31'),
            # ('2021-03-31', '2021-04-14'), ('2021-04-14', '2021-04-28'),
            # ('2021-04-28', '2021-05-12'), ('2021-05-12', '2021-05-26'),
            # ('2021-05-26', '2021-06-09'), ('2021-06-09', '2021-06-23'),
            # ('2021-06-23', '2021-07-07'), ('2021-07-07', '2021-07-21'),
            # ('2021-07-21', '2021-08-04'), ('2021-08-04', '2021-08-18'),
            # ('2021-08-18', '2021-09-08'), ('2021-09-08', '2021-09-29'),
            # ('2021-09-29', '2021-10-20'), ('2021-10-20', '2021-11-03'),
            # ('2021-11-03', '2021-11-17'), ('2021-11-17', '2021-12-01'),
            # ('2021-12-01', '2021-12-15'), ('2021-12-15', '2021-12-29'),
            # ('2021-12-29', '2022-01-12'), ('2022-01-12', '2022-01-26'),
            # ('2022-01-26', '2022-02-09'), ('2022-02-09', '2022-02-23'),
            # ('2022-02-23', '2022-03-16'), ('2022-03-16', '2022-04-06'),
            # ('2022-04-06', '2022-04-27'),
            # ('2022-04-27', '2022-05-11'), ('2022-05-11', '2022-06-01'),
            # ('2022-06-01', '2022-06-22'), ('2022-06-22', '2022-07-06'),
            # ('2022-07-06', '2022-07-27'), ('2022-07-27', '2022-08-10'),
            # ('2022-08-10', '2022-08-24'),
            ('2022-08-24', '2022-09-06'),
        ]
        traindatelist = [
            '2021-01-27', '2021-02-10', '2021-02-24', '2021-03-10', '2021-03-31', '2021-04-14',
            '2021-04-28', '2021-05-12', '2021-05-26', '2021-06-09', '2021-06-23', '2021-07-07',
            '2021-07-21', '2021-08-04', '2021-08-18', '2021-09-08', '2021-09-29', '2021-10-20',
            '2021-11-03', '2021-11-17', '2021-12-01', '2021-12-15', '2021-12-29', '2022-01-12',
            '2022-01-26', '2022-02-09', '2022-02-23', '2022-03-16', '2022-04-06', '2022-04-27',
            '2022-05-11', '2022-06-01', '2022-06-22', '2022-07-06', '2022-07-27',
            '2022-08-10', '2022-08-24'
        ]
        validDate = [
            # ('2022-04-06', '2022-04-27'), ('2022-04-27', '2022-05-11'),
            # ('2022-05-11', '2022-06-01'),
            # ('2022-06-01', '2022-06-22'),
            ('2022-06-22', '2022-07-06'),
            ('2022-07-06', '2022-07-27'),
            ('2022-07-27', '2022-08-10'),
            ('2022-08-10', '2022-08-24')
        ]
        makeModeling.main({
            "runtype": ["runmodel"]  # 只能輸入 buildmodel 或 runmodel , 只會取第一個值
            , "builduser": ["peiyuwu"]  # 只能輸入作者名 , 只會取第一個值
            , "makedate": ['2022-06-09']  # 只能輸入日期格式為YYYY-MM-DD , 取多個值
            , "productname": ["maple"]  # 只能輸入產品名 , 只會取第一個值
            , "project": ["KnowledgeGraph"]  # 只能輸入計畫名 , 只會取第一個值
            , "modelversion": ["V3_1_8"]
            , "parameter": {
                'makedate': makedate,
                'traindatelist': traindatelist,
                'validDate': validDate,
                'RPM_path':['R3_1_5','P3_1_8','M3_1_8']
            }
        })

    print('''
        v319
        1. 資料源:過去有買過隨機箱，且上個月有登入的人。
        2. 建模:用最相似檔期代替新檔期(Graph搜尋)，計算平均購買分數
        3. 預測:XGB預測機率
    ''')
    if False:
        makedate = [ # valdt, enddt
            # ('2021-01-27', '2021-02-10'), ('2021-02-10', '2021-02-24'),
            # ('2021-02-24', '2021-03-10'), ('2021-03-10', '2021-03-31'),
            # ('2021-03-31', '2021-04-14'), ('2021-04-14', '2021-04-28'),
            # ('2021-04-28', '2021-05-12'), ('2021-05-12', '2021-05-26'),
            # ('2021-05-26', '2021-06-09'), ('2021-06-09', '2021-06-23'),
            # ('2021-06-23', '2021-07-07'), ('2021-07-07', '2021-07-21'),
            # ('2021-07-21', '2021-08-04'), ('2021-08-04', '2021-08-18'),
            # ('2021-08-18', '2021-09-08'), ('2021-09-08', '2021-09-29'),
            # ('2021-09-29', '2021-10-20'), ('2021-10-20', '2021-11-03'),
            # ('2021-11-03', '2021-11-17'), ('2021-11-17', '2021-12-01'),
            # ('2021-12-01', '2021-12-15'), ('2021-12-15', '2021-12-29'),
            # ('2021-12-29', '2022-01-12'), ('2022-01-12', '2022-01-26'),
            # ('2022-01-26', '2022-02-09'), ('2022-02-09', '2022-02-23'),
            # ('2022-02-23', '2022-03-16'), ('2022-03-16', '2022-04-06'),
            # ('2022-04-06', '2022-04-27'),
            # ('2022-04-27', '2022-05-11'), ('2022-05-11', '2022-06-01'),
            # ('2022-06-01', '2022-06-22'), ('2022-06-22', '2022-07-06'),
            # ('2022-07-06', '2022-07-27'), ('2022-07-27', '2022-08-10'),
            # ('2022-08-10', '2022-08-24'),
            ('2022-08-24', '2022-09-06'),
        ]
        traindatelist = [
            '2021-01-27', '2021-02-10', '2021-02-24', '2021-03-10', '2021-03-31', '2021-04-14',
            '2021-04-28', '2021-05-12', '2021-05-26', '2021-06-09', '2021-06-23', '2021-07-07',
            '2021-07-21', '2021-08-04', '2021-08-18', '2021-09-08', '2021-09-29', '2021-10-20',
            '2021-11-03', '2021-11-17', '2021-12-01', '2021-12-15', '2021-12-29', '2022-01-12',
            '2022-01-26', '2022-02-09', '2022-02-23', '2022-03-16', '2022-04-06', '2022-04-27',
            '2022-05-11', '2022-06-01', '2022-06-22', '2022-07-06', '2022-07-27',
            '2022-08-10', '2022-08-24'
        ]
        validDate = [
            # ('2022-04-06', '2022-04-27'), ('2022-04-27', '2022-05-11'),
            # ('2022-05-11', '2022-06-01'),
            # ('2022-06-01', '2022-06-22'),
            # ('2022-06-22', '2022-07-06'),
            # ('2022-07-06', '2022-07-27'),
            # ('2022-07-27', '2022-08-10'),
            ('2022-08-10', '2022-08-24')
        ]
        makeModeling.main({
            "runtype": ["runmodel"]  # 只能輸入 buildmodel 或 runmodel , 只會取第一個值
            , "builduser": ["peiyuwu"]  # 只能輸入作者名 , 只會取第一個值
            , "makedate": ['2022-06-09']  # 只能輸入日期格式為YYYY-MM-DD , 取多個值
            , "productname": ["maple"]  # 只能輸入產品名 , 只會取第一個值
            , "project": ["KnowledgeGraph"]  # 只能輸入計畫名 , 只會取第一個值
            , "modelversion": ["V3_1_9"]
            , "parameter": {
                'makedate': makedate,
                'traindatelist': traindatelist,
                'validDate': validDate,
                'RPM_path':['R3_1_5','P3_1_8','M3_1_9']
            }
        })

    print('''v411''')
    if True:
        validDate = [('2022-08-10', '2022-08-24')]
        makeModeling.main({
            "runtype": ["runmodel"]  # 只能輸入 buildmodel 或 runmodel , 只會取第一個值
            , "builduser": ["peiyuwu"]  # 只能輸入作者名 , 只會取第一個值
            , "makedate": ['2022-06-09']  # 只能輸入日期格式為YYYY-MM-DD , 取多個值
            , "productname": ["maple"]  # 只能輸入產品名 , 只會取第一個值
            , "project": ["KnowledgeGraph"]  # 只能輸入計畫名 , 只會取第一個值
            , "modelversion": ["V4_1_1"]
            , "parameter": {
                'validDate': validDate,
                'RPM_path':['M3_1_8','M3_1_9','M4_1_1']
            }
        })

    # TEMP
    if False:
        print('TEMP 測試...')
        makedate = [
            ('2020-12-30', '2021-01-13', '2021-01-27', '2021-02-10'), ('2021-01-13', '2021-01-27', '2021-02-10', '2021-02-24'),
            ('2021-01-27', '2021-02-10', '2021-02-24', '2021-03-10'), ('2021-02-10', '2021-02-24', '2021-03-10', '2021-03-31'),
            ('2021-02-24', '2021-03-10', '2021-03-31', '2021-04-14'), ('2021-03-10', '2021-03-31', '2021-04-14', '2021-04-28'),
            ('2021-03-31', '2021-04-14', '2021-04-28', '2021-05-12'), ('2021-04-14', '2021-04-28', '2021-05-12', '2021-05-26'),
            ('2021-04-28', '2021-05-12', '2021-05-26', '2021-06-09'), ('2021-05-12', '2021-05-26', '2021-06-09', '2021-06-23'),
            ('2021-05-26', '2021-06-09', '2021-06-23', '2021-07-07'), ('2021-06-09', '2021-06-23', '2021-07-07', '2021-07-21'),
            ('2021-06-23', '2021-07-07', '2021-07-21', '2021-08-04'), ('2021-07-07', '2021-07-21', '2021-08-04', '2021-08-18'),
            ('2021-07-21', '2021-08-04', '2021-08-18', '2021-09-08'), ('2021-08-04', '2021-08-18', '2021-09-08', '2021-09-29'),
            ('2021-08-18', '2021-09-08', '2021-09-29', '2021-10-20'), ('2021-09-08', '2021-09-29', '2021-10-20', '2021-11-03'),
            ('2021-09-29', '2021-10-20', '2021-11-03', '2021-11-17'), ('2021-10-20', '2021-11-03', '2021-11-17', '2021-12-01'),
            ('2021-11-03', '2021-11-17', '2021-12-01', '2021-12-15'), ('2021-11-17', '2021-12-01', '2021-12-15', '2021-12-29'),
            ('2021-12-01', '2021-12-15', '2021-12-29', '2022-01-12'), ('2021-12-15', '2021-12-29', '2022-01-12', '2022-01-26'),
            ('2021-12-29', '2022-01-12', '2022-01-26', '2022-02-09'), ('2022-01-12', '2022-01-26', '2022-02-09', '2022-02-23'),
            ('2022-01-26', '2022-02-09', '2022-02-23', '2022-03-16'), ('2022-02-09', '2022-02-23', '2022-03-16', '2022-04-06'),
            ('2022-02-23', '2022-03-16', '2022-04-06', '2022-04-27'), ('2022-03-16', '2022-04-06', '2022-04-27', '2022-05-11'),
            ('2022-04-06', '2022-04-27', '2022-05-11', '2022-06-01'), ('2022-04-27', '2022-05-11', '2022-06-01', '2022-06-22'),
            ('2022-05-11', '2022-06-01', '2022-06-22', '2022-07-06'),
            ('2022-06-01', '2022-06-22', '2022-07-06', '2022-07-27'),
            ('2022-06-22', '2022-07-06', '2022-07-27', '2022-08-10'),
        ]
        traindatelist = [
            '2021-01-27', '2021-02-10', '2021-02-24', '2021-03-10', '2021-03-31', '2021-04-14',
            '2021-04-28', '2021-05-12', '2021-05-26', '2021-06-09', '2021-06-23', '2021-07-07',
            '2021-07-21', '2021-08-04', '2021-08-18', '2021-09-08', '2021-09-29', '2021-10-20',
            '2021-11-03', '2021-11-17', '2021-12-01', '2021-12-15', '2021-12-29', '2022-01-12',
            '2022-01-26', '2022-02-09', '2022-02-23', '2022-03-16', '2022-04-06', '2022-04-27',
            '2022-05-11', '2022-06-01', '2022-06-22', '2022-07-06', '2022-07-27',
            # '2022-08-10'
        ]
        validDate = [
            ('2022-06-01', '2022-06-22'),
            ('2022-06-22', '2022-07-06'), ('2022-07-06', '2022-07-27')
        ]
        makeModeling.main({
            "runtype": ["runmodel"]  # 只能輸入 buildmodel 或 runmodel , 只會取第一個值
            , "builduser": ["peiyuwu"]  # 只能輸入作者名 , 只會取第一個值
            , "makedate": ['2022-06-09']  # 只能輸入日期格式為YYYY-MM-DD , 取多個值
            , "productname": ["maple"]  # 只能輸入產品名 , 只會取第一個值
            , "project": ["KnowledgeGraph"]  # 只能輸入計畫名 , 只會取第一個值
            , "modelversion": ["V99_99_99"]
            , "parameter": {
                'makedate': makedate,
                'traindatelist': traindatelist,
                'validDate': validDate
            }
        })

    ####################################################################################################################

    # startDateTime = datetime.datetime.strptime( "2022-01-02", "%Y-%m-%d")
    # endDateTime = datetime.datetime.strptime( "2022-01-31", "%Y-%m-%d")
    # makeDatetime = startDateTime
    # while makeDatetime <= endDateTime:
    #     makeModeling.main({
    #         "runtype": ["runmodel"]                                         # 只能輸入 buildmodel 或 runmodel , 只會取第一個值
    #         , "builduser": ["vicying"]                                      # 只能輸入作者名 , 只會取第一個值
    #         , "makedate": [makeDatetime.strftime("%Y-%m-%d")]               # 只能輸入日期格式為YYYY-MM-DD , 取多個值
    #         , "productname": ["ExampleProduct"]                             # 只能輸入產品名 , 只會取第一個值
    #         , "project": ["CheckProject"]                             # 只能輸入計畫名 , 只會取第一個值
    #         , "modelversion": ["V0_0_56","V0_0_57","V0_0_58"]               # 只能輸入格式為V0_0_1 , 在 runtype 為 buildmodel 取單一值 , 在 runtype 為 runmodel 取多個值
    #     })
    #     makeDatetime = makeDatetime + datetime.timedelta(days=1)
